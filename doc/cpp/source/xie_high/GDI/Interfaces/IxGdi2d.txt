/*!
	@file	IxGdi2d.h
	@brief	オーバレイ図形インターフェース
*/
/*!
	@def	_IXGDI2D_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{
namespace GDI
{

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_GDI_Interfaces
	@struct		IxGdi2d
	@brief		オーバレイ図形インターフェース
*/

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_GDI_Interfaces
	@struct		IxGdi2dRendering
	@brief		オーバレイ図形描画インターフェース
*/
// ===================================================================
/*!
	@fn		IxGdi2dRendering::Render(HxModule hcanvas, ExGdiScalingMode mode) const
	@brief	描画

	@param[in]		hcanvas		描画先のキャンバス
	@param[in]		mode		スケーリングモード

	@remarks
			図形を指定されたキャンバスに描画します。\n
*/

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_GDI_Interfaces
	@struct		IxGdi2dHandling
	@brief		オーバレイ図形操作インターフェース
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Location() const
	@brief	基準位置の取得

	@return
			図形の基準位置を返します。
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Location(TxPointD value)
	@brief	基準位置の設定

	@param[in]		value		設定値

	@remarks
			この関数は図形を移動させることが目的です。\n
			この値を設定しても図形を構成する各座標の相対位置は変化しません。
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Bounds() const
	@brief	外接矩形の取得

	@return
			図形に外接する矩形を返します。
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Angle() const
	@brief	回転角の取得

	@return
			現在設定されている値を返します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Angle( double degree )
	@brief	回転角の設定

	@param[in]		degree		設定値 (度) [±180]

	@remarks
			この値は degree 単位で、範囲は ±180 です。\n
			正の値（+）は右回転、負の値（-）は左回転です。			
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Axis() const
	@brief	回転の機軸の取得

	@return
			現在設定されている値を返します。\n
			この値は基準位置からの相対値(±)を示します。

	@sa
		@ref Location() const \n
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Axis( TxPointD value )
	@brief	回転の機軸の設定

	@param[in]		value		設定値 (基準位置からの相対値(±)) 

	@remarks
			図形の基準位置（Location）に この値を加算した位置が回転中心になります。

	@sa
		@ref Location() const \n
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::HitTest( TxPointD position, double margin ) const
	@brief	位置判定

	@param[in]		position	指定座標
	@param[in]		margin		判定の許容範囲 [範囲:0~] [既定値:2.0] ※±margin の範囲内で判定します。


	@return
			指定座標が図形外にあれば 0 を返します。\n
			指定座標が図形内にあれば 0 以外の値を返します。\n
			返す値の範囲は図形によって異なります。 

	@remarks
			指定座標が図形上のどの位置にあるかを判定します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dHandling::Modify(HxModule prev_figure, TxPointD prev_position, TxPointD move_position, double margin)
	@brief	図形の編集（位置移動または形状変更）

	@param[in]		prev_figure		編集前の図形
	@param[in]		prev_position	移動前の座標
	@param[in]		move_position	移動後の座標
	@param[in]		margin			判定の許容範囲 [範囲:0~] [既定値:2.0] ※±margin の範囲内で判定します。

	@sa
		HitTest( TxPointD position, double margin ) const \n
*/

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_GDI_Interfaces
	@struct		IxGdi2dVisualizing
	@brief		オーバレイ図形視覚情報インターフェース
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::BkColor() const
	@brief	背景色

	@return
			現在設定されている値を返します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::BkColor( TxRGB8x4 value )
	@brief	背景色

	@param[in]		value		設定値

	@remarks
			この値は図形の面（輪郭線によって内包される部分）の描画色を示します。\n
			アルファ値（A フィールド）によって不透明度 [0~255=透明~不透明] を指定できます。\n

	@sa
		@ref PenColor( TxRGB8x4 value ) \n
		@ref BkEnable( bool value ) \n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::BkEnable() const
	@brief	背景の有効属性

	@retval	true	有効
	@retval	false	無効
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::BkEnable( bool value )
	@brief	背景の有効属性

	@param[in]		value		設定値 [true:有効、false:無効]

	@remarks
			この値が false の時は背景描画が無視されます。\n

	@sa
		@ref BkColor( TxRGB8x4 value ) \n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenColor() const
	@brief	ペン色

	@return
			現在設定されている値を返します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenColor( TxRGB8x4 value )
	@brief	ペン色

	@param[in]		value		設定値

	@remarks
			この値は図形の輪郭部分の描画色を示します。\n
			アルファ値（A フィールド）によって不透明度 [0~255=透明~不透明] を指定できます。\n

	@sa
		@ref BkColor( TxRGB8x4 value ) \n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenStyle() const
	@brief	ペン形状

	@return
			現在設定されている値を返します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenStyle( ExGdiPenStyle value )
	@brief	ペン形状

	@param[in]		value		設定値
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenWidth() const
	@brief	ペン幅

	@return
			現在設定されている値を返します。\n
*/
// ===================================================================
/*!
	@fn		IxGdi2dVisualizing::PenWidth( int value )
	@brief	ペン幅

	@param[in]		value		設定値 [1~]
*/

}
}
