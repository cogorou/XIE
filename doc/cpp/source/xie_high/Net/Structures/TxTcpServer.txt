/*!
	@file	TxTcpServer.h
	@brief	TCP/IP通信サーバー構造体
*/
/*!
	@internal
	@file	TxTcpServer.cpp
	@brief	TCP/IP通信サーバー構造体
*/
/*!
	@def	_TXTCPSERVER_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{
namespace Net
{

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_Net_Structures
	@struct		TxTcpServer
	@brief		TCP/IP通信サーバー構造体
*/
// ===================================================================
/*!
	@var	TxTcpServer::Socket
	@brief	ソケットハンドル [既定値:INVALID_SOCKET]
*/
// ===================================================================
/*!
	@var	TxTcpServer::Clients
	@brief	クライアント配列の先頭アドレス [既定値:NULL]

	@remarks
			現在接続しているクライアントのリストを保有します。\n
*/
// ===================================================================
/*!
	@var	TxTcpServer::Connections
	@brief	クライアント配列の要素数 [既定値:0] [範囲:0~]

	@remarks
			現在接続しているクライアント数を保有します。\n
*/
// ===================================================================
/*!
	@var	TxTcpServer::IPAddress
	@brief	IPアドレス [既定値:0,0,0,0]

	@remarks
			自身のエンドポイントの IP アドレスを指定します。\n
*/
// ===================================================================
/*!
	@var	TxTcpServer::Port
	@brief	ポート番号 [既定値:0] [範囲:0~65535]

	@remarks
			自身のエンドポイントのポート番号を指定します。\n
			指定可能な範囲は以下の通りです。\n
			- 0~1023: Well known port number
			- 1024~49151: Registered port number
			- 49152~65535: Dynamic port number
*/
// ===================================================================
/*!
	@var	TxTcpServer::Backlog
	@brief	最大接続数 [既定値:5] [範囲:1~]
*/
// ===================================================================
/*!
	@fn		TxTcpServer::TxTcpServer()
	@brief	コンストラクタ

	@remarks
			全てのメンバーフィールドを 0 初期化して構築します。
*/
// ===================================================================
/*!
	@fn		TxTcpServer::Default()
	@brief	既定値

	@return	既定値を構造体に設定して返します。
*/

}
}
