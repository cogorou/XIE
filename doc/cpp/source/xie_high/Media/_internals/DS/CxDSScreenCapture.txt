/*!
	@file	CxDSScreenCapture.h
	@brief	スクリーンキャプチャクラス
*/
/*!
	@internal
	@file	CxDSScreenCapture.cpp
	@brief	スクリーンキャプチャクラス
*/
#ifdef _MSC_VER

/*!
	@def	_CXDSSCREENCAPTURE_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{
namespace Media
{

//////////////////////////////////////////////////////////////////////
/*!
	@internal
	@ingroup	group_xie_Media_Internals
	@class		CxDSScreenCapture
	@brief		スクリーンキャプチャクラス
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::CxDSScreenCapture()
	@brief	コンストラクタ

	@remarks
			標準のコンストラクタです。\n
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::~CxDSScreenCapture()
	@brief	デストラクタ

	@remarks
			このオブジェクトを破棄します。\n
			内部では Dispose を呼び出しています。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Dispose()
	@brief	解放
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::IsValid() const
	@brief	有効性の検査

	@retval	true	有効
	@retval	false	無効
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Setup(HxModule hWindow, HxModule hAudio, HxModule hOutput)
	@brief	初期化

	@param[in]		hWindow		対象のウィンドウ \n
	@param[in]		hAudio		音声入力 \n
	@param[in]		hOutput		出力先 \n
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::CreateGrabber(ExMediaType type) const
	@brief	メディア捕獲用イベントレシーバの生成

	@param[in]		type		捕獲するメディアの種別

	@return	メディア(映像または音声)を捕獲する為の同期オブジェクトを生成して返します。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::GraphBuilder() const
	@brief	グラフビルダーの参照

	@return	内部に保有しているグラフビルダーへのポインタを返します。外部で解放しないでください。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Reset()
	@brief	リセット
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Start()
	@brief	開始
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Stop()
	@brief	停止
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Abort()
	@brief	中断
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Pause()
	@brief	一時停止
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Wait(int timeout) const
	@brief	待機

	@param[in]		timeout		タイムアウト (msec) [-1,0~]

	@return	非同期処理が停止するか指定時間が経過するまで待機します。\n
			停止を検知すると true を返します。\n
			指定時間が経過すると false を返します。\n
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::IsRunning() const
	@brief	動作状態の取得

	@return	非同期処理が動作中の場合は true を返します。\n
			それ以外は false を返します。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::IsPaused() const
	@brief	一時停止状態の取得

	@return	非同期処理が一時停止状態の場合は true を返します。\n
			それ以外は false を返します。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::GetParam(TxCharCPtrA name, void* value, TxModel model) const
	@brief	パラメータの取得

	@param[in]		name		パラメータ名称
	@param[out]		value		取得した値を格納する変数へのポインタ
	@param[in]		model		変数の型
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::GetParam(TxCharCPtrA name) const
	@brief	パラメータの取得

	@tparam	TV		取得する値の型

	@param[in]		name		パラメータ名称

	@sa
		@ref CxDSScreenCapture::GetParam(TxCharCPtrA name, void* value, TxModel model) const \n
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::SetParam(TxCharCPtrA name, const void* value, TxModel model)
	@brief	パラメータの設定

	@param[in]		name		パラメータ名称
	@param[in]		value		設定値が格納された変数へのポインタ
	@param[in]		model		変数の型
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::SetParam(TxCharCPtrA name, TV value)
	@brief	パラメータの設定

	@tparam	TV		設定値の型

	@param[in]		name		パラメータ名称
	@param[in]		value		設定値

	@sa
		@ref CxDSScreenCapture::SetParam(TxCharCPtrA name, const void* value, TxModel model) \n
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Timeout() const
	@brief	タイムアウトの取得

	@return	現在設定されている値を返します。単位は msec です。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Timeout(int value)
	@brief	タイムアウトの設定

	@param[in]		value		設定値 (msec) [-1,0~] [既定値:5000]
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::FrameRate() const
	@brief	フレームレートの取得

	@return	現在設定されている値を返します。単位は fps です。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::FrameRate(int value)
	@brief	フレームレートの設定

	@param[in]		value		設定値 (fps) [1~] [既定値:10]
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::GetFrameSize() const
	@brief	フレームサイズの取得

	@return	現在設定されているフレームサイズを返します。
			この値は初期化後に有効になります。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::Connected(ExMediaType type) const
	@brief	接続状態の取得

	@param[in]		type		メディア種別

	@return	指定のメディア(映像入力/音声入力)の接続状態を返します。
			接続している場合は true、それ以外は false を返します。
*/
// ===================================================================
/*!
	@fn		CxDSScreenCapture::WaitForCompletion(int timeout) const
	@brief	レンダリング完了待機

	@param[in]		timeout		タイムアウト (msec) [-1,0~]

	@return	レンダリングが完了するか指定時間が経過するまで待機します。\n
			完了を検知すると true を返します。\n
			指定時間が経過すると false を返します。\n
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_Timeout
	@brief	タイムアウト (msec)
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_FrameRate
	@brief	フレームレート (fps)
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_AudioDeviceName
	@brief	音声入力オブジェクトのデバイス名
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_AudioProductName
	@brief	音声入力オブジェクトの製品名
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_OutputFileName
	@brief	動画ファイル名
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_OutputDeviceName
	@brief	映像出力オブジェクトのデバイス名
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_OutputProductName
	@brief	映像出力オブジェクトの製品名
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_VideoGrabberReceiver
	@brief	映像捕獲用グラバー
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_AudioGrabberReceiver
	@brief	音声捕獲用グラバー
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_Graph
	@brief	グラフビルダー
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_Builder
	@brief	キャプチャグラフビルダー
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_Video
	@brief	映像入力用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_VideoGrabber
	@brief	映像捕獲用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_VideoRenderer
	@brief	映像出力用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_Audio
	@brief	音声入力用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_AudioGrabber
	@brief	音声捕獲用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_AudioRenderer
	@brief	音声出力用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_FileSink
	@brief	動画ファイル出力用オブジェクト
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_MediaControl
	@brief	メディアコントロール
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_MediaEvent
	@brief	メディアイベント
*/
// ===================================================================
/*!
	@var	CxDSScreenCapture::m_VideoPin
	@brief	映像入力デバイスの出力ピン
*/

}
}

#endif	// _MCS_VER
