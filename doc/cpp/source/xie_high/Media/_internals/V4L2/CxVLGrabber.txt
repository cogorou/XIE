/*!
	@file	CxVLGrabber.h
	@brief	グラバークラス
*/
/*!
	@internal
	@file	CxVLGrabber.cpp
	@brief	グラバークラス
*/
#ifndef _MSC_VER

/*!
	@def	_CXVLGRABBER_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{
namespace Media
{

//////////////////////////////////////////////////////////////////////
/*!
	@internal
	@ingroup	group_xie_Media_Internals
	@class		CxVLGrabber
	@brief		グラバークラス
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::From(const CxVLSampleReceiver* receiver)
	@brief	生成関数

	@param[in]		receiver	サンプルレシーバー

	@return	生成したオブジェクトを返します。
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::CxVLGrabber(CxGrabber* parent)
	@brief	コンストラクタ

	@param[in]		parent		親オブジェクト(このオブジェクトを内包するオブジェクト)
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::~CxVLGrabber()
	@brief	デストラクタ

	@remarks
			このオブジェクトを破棄します。\n
			内部では Dispose を呼び出しています。
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::Dispose()
	@brief	解放
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::IsValid() const
	@brief	有効性の検査

	@retval	true	有効
	@retval	false	無効
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::CopyFrom(const IxModule& src)
	@brief	オブジェクトの内容の複製

	@param[in]		src		複製元
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::ContentEquals(const IxModule &src) const
	@brief	オブジェクトの内容の比較

	@param[in]		src		比較対象

	@retval	true	一致
	@retval	false	不一致
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::Parent() const
	@brief	親オブジェクトの取得

	@return	親オブジェクト(このオブジェクトを内包するオブジェクト)を返します。
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::Receiver() const
	@brief	サンプルレシーバーの取得

	@return	サンプルレシーバーを返します。
*/
// ===================================================================
/*!
	@fn		CxVLGrabber::Receiver(const CxVLSampleReceiver* receiver)
	@brief	サンプルレシーバーの設定

	@param[in]		receiver		サンプルレシーバー
*/
// ===================================================================
/*!
	@var	CxVLGrabber::m_Parent
	@brief	親オブジェクト
*/
// ===================================================================
/*!
	@var	CxVLGrabber::m_Receiver
	@brief	サンプルレシーバー
*/

/*
class XIE_EXPORT_CLASS CxVLGrabber : public CxModule
	, public IxDisposable
	, public IxEquatable
{
public:
	static CxGrabber From(const CxVLSampleReceiver* receiver)
	{
		CxGrabber result;
		CxVLGrabber* body = (CxVLGrabber*)result.GetModule();
		body->Receiver(receiver);
		return result;
	}

	CxVLGrabber(CxGrabber* parent);
	virtual ~CxVLGrabber();

public:
	// IxDisposable
	virtual void Dispose();
	virtual bool IsValid() const;

	// IxEquatable
	virtual void CopyFrom(const IxModule& src);
	virtual bool ContentEquals(const IxModule& src) const;

	virtual CxGrabber* Parent() const;

	virtual CxVLSampleReceiver* Receiver() const;
	virtual void Receiver(const CxVLSampleReceiver* receiver);

protected:
	CxGrabber*		m_Parent;
	CxVLSampleReceiver*	m_Receiver;
};
*/

}
}

#endif	// _MCS_VER
