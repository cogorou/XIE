/*!
	@internal
	@file	CxFilePluginBmp.h
	@brief	ファイル入出力プラグインクラス (Bitmap 形式)
*/
/*!
	@internal
	@file	CxFilePluginBmp.cpp
	@brief	ファイル入出力プラグインクラス (Bitmap 形式)
*/
/*!
	@internal
	@file	CxFilePluginBmp_Check.cpp
	@brief	ファイル入出力プラグインクラス (Bitmap 形式)
*/
/*!
	@internal
	@file	CxFilePluginBmp_Load.cpp
	@brief	ファイル入出力プラグインクラス (Bitmap 形式)
*/
/*!
	@internal
	@file	CxFilePluginBmp_Save.cpp
	@brief	ファイル入出力プラグインクラス (Bitmap 形式)
*/
/*!
	@internal
	@def	_CXFILEPLUGINBMP_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{
namespace File
{

//////////////////////////////////////////////////////////////////////
/*!
	@internal
	@ingroup	group_xie_File_Plugins
	@class		CxFilePluginBmp
	@brief		ファイル入出力プラグインクラス (Bitmap 形式)
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::OpenA	(TxCharCPtrA filename, int mode)
	@brief	オープン (MBCS)

	@param[in]	filename	ファイル名
	@param[in]	mode		オープンモード [0:Load,1:Save] \n
							以下の値または定数を指定してください。
							- 0: XIE_FILE_OPENMODE_LOAD
							- 1: XIE_FILE_OPENMODE_SAVE
							.

	@return	ハンドル（ファイルディスクリプタ）を返します。\n

	@exception	CxException	処理に失敗した場合は例外を発行します。Code で原因を特定してください。\n
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::OpenW	(TxCharCPtrW filename, int mode)
	@brief	オープン (UNICODE)

	@param[in]	filename	ファイル名
	@param[in]	mode		オープンモード [0:Load,1:Save] \n
							以下の値または定数を指定してください。
							- 0: XIE_FILE_OPENMODE_LOAD
							- 1: XIE_FILE_OPENMODE_SAVE
							.

	@return	ハンドル（ファイルディスクリプタ）を返します。\n

	@exception	CxException	処理に失敗した場合は例外を発行します。Code で原因を特定してください。\n
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::Close	(void* handle)
	@brief	クローズ

	@param[in]	handle	ハンドル
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::Check	(TxImageSize* image_size, void* handle, bool unpack)
	@brief	画像サイズの確認

	@param[out]	image_size	画像サイズ
	@param[in]	handle		ハンドル（ファイルディスクリプタ）
	@param[in]	unpack		アンパッキングの指示

	@return	正常の場合は ExSuccess を返します。異常の場合はそれ以外を返します。

	@remarks
			指定されたファイルを読み込む為に必要となる画像サイズを確認します。
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::Load	(HxModule hdst, void* handle, bool unpack)
	@brief	画像ファイルの読み込み

	@param[in,out]	hdst		画像オブジェクト
	@param[in]		handle		ハンドル（ファイルディスクリプタ）
	@param[in]		unpack		アンパッキングの指示

	@return	正常の場合は ExSuccess を返します。異常の場合はそれ以外を返します。

	@remarks
			指定されたファイルを読み込みます。
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::Save	(HxModule hsrc, void* handle)
	@brief	画像ファイルへの保存

	@param[in]		hsrc		画像サイズ
	@param[in]		handle		ハンドル（ファイルディスクリプタ）

	@return	正常の場合は ExSuccess を返します。異常の場合はそれ以外を返します。

	@remarks
			指定された画像オブジェクトを指定されたファイルに保存します。
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::CreateBitmapInfo( int width, int height, int bpp, BITMAPINFO** ppBmpInfo, unsigned int* puiBmpInfoSize )
	@brief	ビットマップ情報の生成

	@param[in]	width			ビットマップの幅 (pixels)
	@param[in]	height			ビットマップの高さ (pixels)
	@param[in]	bpp				ビットマップのビット深度 (bits/pixel)
	@param[out]	ppBmpInfo		生成したビットマップ情報 \n
								使用後は FreeBitmapInfo で解放する必要があります。\n
	@param[out]	puiBmpInfoSize	生成したビットマップ情報のサイズ (bytes)

	@retval	true	正常
	@retval	false	異常

	@sa
		@ref FreeBitmapInfo \n
*/
// ===================================================================
/*!
	@fn		CxFilePluginBmp::FreeBitmapInfo( BITMAPINFO* bmpInfo )
	@brief	ビットマップ情報の解放

	@param[in,out]	bmpInfo		解放するビットマップ情報

	@sa
		@ref CreateBitmapInfo \n
*/

}
}
