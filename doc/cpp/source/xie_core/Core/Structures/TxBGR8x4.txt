/*!
	@file	TxBGR8x4.h
	@brief	カラー構造体 (BGRA)
*/
/*!
	@internal
	@file	TxBGR8x4.cpp
	@brief	カラー構造体 (BGRA)
*/
/*!
	@def	_TXBGR8X4_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_Core_Structures
	@struct		TxBGRx4
	@brief		カラーテンプレート構造体 (BGRA)

	@tparam	TE	色成分の型
*/
// ===================================================================
/*!
	@var	TxBGRx4::B
	@brief	青成分
*/
// ===================================================================
/*!
	@var	TxBGRx4::G
	@brief	緑成分
*/
// ===================================================================
/*!
	@var	TxBGRx4::R
	@brief	赤成分
*/
// ===================================================================
/*!
	@var	TxBGRx4::A
	@brief	アルファ値
*/
// ===================================================================
/*!
	@fn		TxBGRx4::Default()
	@brief	既定値

	@return	既定値を構造体に設定して返します。
*/
// ===================================================================
/*!
	@fn		TxBGRx4::Model()
	@brief	要素モデル

	@return	この構造体の要素モデルを返します。
*/
// ===================================================================
/*!
	@fn		TxBGRx4::TxBGRx4()
	@brief	コンストラクタ
*/
// ===================================================================
/*!
	@fn		TxBGRx4::TxBGRx4(TE R, TE G, TE B, TE A)
	@brief	コンストラクタ (初期値指定)

	@param[in]		R		赤成分 [0~255]
	@param[in]		G		緑成分 [0~255]
	@param[in]		B		青成分 [0~255]
	@param[in]		A		アルファ [0~255]
*/
// ===================================================================
/*!
	@fn		TxBGRx4::operator == (const TxBGRx4& cmp) const
	@brief	比較オペレータ(等価)

	@param[in]		cmp		比較対象

	@retval		true	一致
	@retval		false	不一致

	@remarks
			指定されたオブジェクトの内容との比較を行います。\n
*/
// ===================================================================
/*!
	@fn		TxBGRx4::operator != (const TxBGRx4& cmp) const
	@brief	比較オペレータ(不等価)

	@param[in]		cmp		比較対象

	@retval		true	不一致
	@retval		false	一致

	@remarks
			指定されたオブジェクトの内容との比較を行います。\n
*/

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_Core_Structures
	@struct		TxBGR8x4
	@brief		カラー構造体 (BGRA)
*/
// ===================================================================
/*!
	@var	TxBGR8x4::B
	@brief	青成分 [0~255]
*/
// ===================================================================
/*!
	@var	TxBGR8x4::G
	@brief	緑成分 [0~255]
*/
// ===================================================================
/*!
	@var	TxBGR8x4::R
	@brief	赤成分 [0~255]
*/
// ===================================================================
/*!
	@var	TxBGR8x4::A
	@brief	アルファ値 [0~255]
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::Default()
	@brief	既定値

	@return	既定値を構造体に設定して返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::TxBGR8x4()
	@brief	コンストラクタ
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::TxBGR8x4(unsigned char R, unsigned char G, unsigned char B)
	@brief	コンストラクタ (初期値指定)

	@param[in]		R		赤成分 [0~255]
	@param[in]		G		緑成分 [0~255]
	@param[in]		B		青成分 [0~255]
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::TxBGR8x4(unsigned char R, unsigned char G, unsigned char B, unsigned char A)
	@brief	コンストラクタ (初期値指定)

	@param[in]		R		赤成分 [0~255]
	@param[in]		G		緑成分 [0~255]
	@param[in]		B		青成分 [0~255]
	@param[in]		A		アルファ値 [0~255]
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator == (const TxBGR8x4& cmp) const
	@brief	比較オペレータ(等価)

	@param[in]		cmp		比較対象

	@retval		true	一致
	@retval		false	不一致

	@remarks
			指定されたオブジェクトの内容との比較を行います。\n
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator != (const TxBGR8x4& cmp) const
	@brief	比較オペレータ(不等価)

	@param[in]		cmp		比較対象

	@retval		true	不一致
	@retval		false	一致

	@remarks
			指定されたオブジェクトの内容との比較を行います。\n
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator TxBGR8x3() const
	@brief	キャストオペレータ

	@return	現在の内容を TxBGR8x3 構造体に格納して返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator TxRGB8x3() const
	@brief	キャストオペレータ

	@return	現在の内容を TxRGB8x3 構造体に格納して返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator TxRGB8x4() const
	@brief	キャストオペレータ

	@return	現在の内容を TxRGB8x4 構造体に格納して返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+ (const TxBGR8x4 &value) const
	@brief	加算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の加算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+ (int value) const
	@brief	加算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の加算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+ (double value) const
	@brief	加算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の加算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+= (const TxBGR8x4 &value)
	@brief	加算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を加算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+= (int value)
	@brief	加算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を加算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator+= (double value)
	@brief	加算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を加算して自身の参照を返します。\n
			小数点以下桁は四捨五入されます。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator- (const TxBGR8x4 &value) const
	@brief	減算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の減算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator- (int value) const
	@brief	減算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の減算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator- (double value) const
	@brief	減算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の減算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator-= (const TxBGR8x4 &value)
	@brief	減算代入オペレータ

	@param[in]	value	右辺値

	@return	自身から指定値を減算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator-= (int value)
	@brief	減算代入オペレータ

	@param[in]	value	右辺値

	@return	自身から指定値を減算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator-= (double value)
	@brief	減算代入オペレータ

	@param[in]	value	右辺値

	@return	自身から指定値を減算して自身の参照を返します。\n
			小数点以下桁は四捨五入されます。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator* (const TxBGR8x4 &value) const
	@brief	乗算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の乗算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator* (int value) const
	@brief	乗算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の乗算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator* (double value) const
	@brief	乗算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の乗算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator*= (const TxBGR8x4 &value)
	@brief	乗算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を乗算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator*= (int value)
	@brief	乗算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を乗算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator*= (double value)
	@brief	乗算代入オペレータ

	@param[in]	value	右辺値

	@return	自身に指定値を乗算して自身の参照を返します。\n
			小数点以下桁は四捨五入されます。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/ (const TxBGR8x4 &value) const
	@brief	除算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の除算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/ (int value) const
	@brief	除算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の除算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/ (double value) const
	@brief	除算オペレータ

	@param[in]	value	右辺値

	@return	自身と指定値の除算結果を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/= (const TxBGR8x4 &value)
	@brief	除算代入オペレータ

	@param[in]	value	右辺値

	@return	自身を指定値を除算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/= (int value)
	@brief	除算代入オペレータ

	@param[in]	value	右辺値

	@return	自身を指定値を除算して自身の参照を返します。
*/
// ===================================================================
/*!
	@fn		TxBGR8x4::operator/= (double value)
	@brief	除算代入オペレータ

	@param[in]	value	右辺値

	@return	自身を指定値を除算して自身の参照を返します。\n
			小数点以下桁は四捨五入されます。
*/

}
