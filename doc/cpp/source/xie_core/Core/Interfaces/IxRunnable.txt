/*!
	@file	IxRunnable.h
	@brief	非同期処理が可能な機能のインターフェース
*/
/*!
	@def	_IXRUNNABLE_H_INCLUDED_
	@brief	多重インクルード抑制
*/

namespace xie
{

//////////////////////////////////////////////////////////////////////
/*!
	@ingroup	group_xie_Core_Interfaces
	@struct		IxRunnable
	@brief		非同期処理が可能な機能のインターフェース
*/
// ===================================================================
/*!
	@fn		IxRunnable::Reset()
	@brief	リセット
*/
// ===================================================================
/*!
	@fn		IxRunnable::Start()
	@brief	開始

	@remarks
			非同期処理を開始します。
*/
// ===================================================================
/*!
	@fn		IxRunnable::Stop()
	@brief	停止

	@remarks
			非同期処理を停止します。
*/
// ===================================================================
/*!
	@fn		IxRunnable::Wait(int timeout) const
	@brief	待機

	@param[in]		timeout		タイムアウト (msec) [-1,0~]

	@return	非同期処理が停止するか指定時間が経過するまで待機します。\n
			停止を検知すると true を返します。\n
			指定時間が経過すると false を返します。\n
*/
// ===================================================================
/*!
	@fn		IxRunnable::IsRunning() const
	@brief	動作状態の取得

	@return	非同期処理が動作中の場合は true を返します。\n
			それ以外は false を返します。\n
*/

}
